{"version":3,"sources":["components/clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","isClockVisible","timerId","this","setInterval","date","setState","console","log","prevProps","name","props","clearTimeout","className","React","Component","App","clockName","hideMyClock","showMyClock","randomizeMyName","Math","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,gBAAgB,GAHpB,EAMEC,aANF,yDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAa,IAAIN,KAEvB,EAAKO,SAAS,CAAER,KAAMO,EAAKL,uBAE3BO,QAAQC,IAAIH,EAAKL,wBAChB,OAfP,gCAkBE,SAAmBS,GAEjBF,QAAQC,IAAR,qCACgCC,EAAUC,KAD1C,eACqDP,KAAKQ,MAAMD,SArBpE,kCAyBE,WACMP,KAAKD,SACPU,aAAaT,KAAKD,WA3BxB,oBA+BE,WACE,OACE,oBAAG,UAAQ,OAAOW,UAAU,qBAA5B,UACG,IACCV,KAAKN,MAAMI,gBAAoBE,KAAKN,MAAMC,YAnCpD,GAA2BgB,IAAMC,WCD3BC,G,kNACJnB,MAAQ,CACNI,gBAAgB,EAChBgB,UAAW,G,EAGbC,YAAc,WACZ,EAAKZ,SAAS,CAAEL,gBAAgB,K,EAGlCkB,YAAc,WACZ,EAAKb,SAAS,CAAEL,gBAAgB,K,EAGlCmB,gBAAkB,WAChB,EAAKd,SAAS,CAAEW,UAA2B,KAAhBI,KAAKC,Y,4CAGlC,WACE,MAAsCnB,KAAKN,MAAnCoB,EAAR,EAAQA,UAAWhB,EAAnB,EAAmBA,eAEnB,OACE,sBAAKY,UAAU,MAAf,UACE,6CACA,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,qBAAb,2BACCZ,GACC,cAAC,EAAD,CAAOS,KAAMO,OAGjB,wBACEM,KAAK,SACLC,QAASrB,KAAKe,YAFhB,wBAOA,wBACEK,KAAK,SACLC,QAASrB,KAAKgB,YAFhB,wBAOA,wBACEI,KAAK,SACLC,QAASrB,KAAKiB,gBAFhB,oC,GA5CUN,IAAMC,YAuDTC,IC9DfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1382bc07.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  time: string,\n  isClockVisible: boolean,\n}\n\ninterface Props {\n  name: number,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n    isClockVisible: true,\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // eslint-disable-next-line no-console\n    console.log(\n      `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  render(): React.ReactNode {\n    return (\n      <p data-cy=\"time\" className=\"clock-box__contetn\">\n        {' '}\n        {(this.state.isClockVisible) && (this.state.time)}\n      </p>\n\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/clock/Clock';\n\nimport './App.scss';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 1,\n  };\n\n  hideMyClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showMyClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  randomizeMyName = () => {\n    this.setState({ clockName: Math.random() * 9999 });\n  };\n\n  render(): React.ReactNode {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"clock-box\">\n          <p className=\"clock-box__contetn\">Current time:</p>\n          {isClockVisible && (\n            <Clock name={clockName} />)}\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={this.hideMyClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.showMyClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.randomizeMyName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}